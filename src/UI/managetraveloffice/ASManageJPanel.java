/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.managetraveloffice;

import business.AirlinerDirectory;
import dataitems.Airliner;
import dataitems.Airplane;
import dataitems.Flight;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Xiaoran Li
 */
public class ASManageJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ASManageJPanel
     */
    private JPanel panelRight;
    private AirlinerDirectory airlinerlist;
    private Airliner currentAirliner;

    private void updateCurrentAirliner() {
        for (Airliner i : this.airlinerlist.getAirlinerlist()) {
            if (i.getCompanyname().equals(this.airlinerBox.getSelectedItem())) {
                this.currentAirliner = i;
            }
        }
    }

    public ASManageJPanel(JPanel panelRight, AirlinerDirectory airlinerlist) {
        initComponents();
        this.panelRight = panelRight;
        this.airlinerlist = airlinerlist;
        this.addAirlinerBox();
    }

    public void addAirlinerBox() {
        for (Airliner a : this.airlinerlist.getAirlinerlist()) {
            this.airlinerBox.addItem(a.getCompanyname());
        }

    }

    public void populateAirplane() {
        DefaultTableModel dtm = (DefaultTableModel) this.airplaneTable.getModel();
        dtm.setRowCount(0);
        this.updateCurrentAirliner();
        for (Airplane i : this.currentAirliner.getAirplaneDirectory().getAirplanelist()) {
            Object[] row = new Object[dtm.getColumnCount()];
            row[0] = i;
            dtm.addRow(row);
        }
    }

    public void populateFlight() {
        DefaultTableModel dtm = (DefaultTableModel) this.flightTable.getModel();
        dtm.setRowCount(0);
        this.updateCurrentAirliner();
        for (Flight i : this.currentAirliner.getFlightDirectory().getFlightlist()) {
            Object[] row = new Object[dtm.getColumnCount()];
            row[0] = i;
            row[1] = i.getRoute();
            row[2] = i.getDate();
            row[3] = i.getAirliner();
            row[4] = i.getAirplane();
            dtm.addRow(row);
        }
    }

    public void populateAF() {
        this.populateAirplane();
        this.populateFlight();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        createAirplaneBtn = new javax.swing.JButton();
        deleteAirplaneBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        airplaneTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        flightTable = new javax.swing.JTable();
        airlinerBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        createFlightBtn = new javax.swing.JButton();
        deleteFlightBtn = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        jLabel1.setText("Airplane and Schedul Management");

        createAirplaneBtn.setText("Create Airplane");
        createAirplaneBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAirplaneBtnActionPerformed(evt);
            }
        });

        deleteAirplaneBtn.setText("Delete Airplane");
        deleteAirplaneBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAirplaneBtnActionPerformed(evt);
            }
        });

        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        airplaneTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Airplane"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(airplaneTable);
        if (airplaneTable.getColumnModel().getColumnCount() > 0) {
            airplaneTable.getColumnModel().getColumn(0).setResizable(false);
        }

        flightTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Flight", "Route", "Date", "Airliner", "Airplane"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(flightTable);
        if (flightTable.getColumnModel().getColumnCount() > 0) {
            flightTable.getColumnModel().getColumn(0).setResizable(false);
            flightTable.getColumnModel().getColumn(1).setResizable(false);
            flightTable.getColumnModel().getColumn(2).setResizable(false);
            flightTable.getColumnModel().getColumn(3).setResizable(false);
            flightTable.getColumnModel().getColumn(4).setResizable(false);
        }

        airlinerBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                airlinerBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Choose Airliner: ");

        createFlightBtn.setText("Create Flight");
        createFlightBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createFlightBtnActionPerformed(evt);
            }
        });

        deleteFlightBtn.setText("Delete Flight");
        deleteFlightBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteFlightBtnActionPerformed(evt);
            }
        });

        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 281, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(createFlightBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(deleteFlightBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(createAirplaneBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(deleteAirplaneBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(airlinerBox, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(airlinerBox, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(refreshBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(createFlightBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deleteFlightBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(createAirplaneBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteAirplaneBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(49, 49, 49))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void createAirplaneBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAirplaneBtnActionPerformed
        // TODO add your handling code here:
        this.updateCurrentAirliner();
        JPanel p = new ASCreateAirplaneJPanel(this.panelRight, this.currentAirliner);
        CardLayout layout = (CardLayout) panelRight.getLayout();
        panelRight.add("ASCreateAirplaneJPanel", p);
        layout.next(panelRight);

    }//GEN-LAST:event_createAirplaneBtnActionPerformed

    private void deleteAirplaneBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAirplaneBtnActionPerformed
        // TODO add your handling code here:
        int selectRow = this.airplaneTable.getSelectedRow();
        this.updateCurrentAirliner();
        if (selectRow >= 0) {
            int dialogButton = JOptionPane.YES_NO_CANCEL_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Are you sure?", "Delete the airliner record", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION) {
                Airplane d = (Airplane) this.airplaneTable.getValueAt(selectRow, 0);
                String deleteName = d.getAirplaneName();
//                for(Flight f :this.currentAirliner.getFlightDirectory().getFlightlist()){
//                    System.out.println(f.getAirplane());
//                    if(f.getAirplane().equals(deleteName)){
//                        this.currentAirliner.getFlightDirectory().deleteFlight(f);
//                    }
//                }
                this.currentAirliner.getAirplaneDirectory().deleteAirplane(d);
                this.populateAF();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row!");
        }
    }//GEN-LAST:event_deleteAirplaneBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        this.panelRight.remove(this);
        CardLayout layout = (CardLayout) this.panelRight.getLayout();
        layout.previous(this.panelRight);
    }//GEN-LAST:event_backBtnActionPerformed

    private void createFlightBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createFlightBtnActionPerformed
        // TODO add your handling code here:
        this.updateCurrentAirliner();
        JPanel p = new ASCreateFlightJPanel(this.panelRight, this.currentAirliner);
        CardLayout layout = (CardLayout) panelRight.getLayout();
        panelRight.add("ASCreateFlightJPanel", p);
        layout.next(panelRight);
    }//GEN-LAST:event_createFlightBtnActionPerformed

    private void deleteFlightBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteFlightBtnActionPerformed
        // TODO add your handling code here:
        int selectRow = this.flightTable.getSelectedRow();
        this.updateCurrentAirliner();
        if (selectRow >= 0) {
            int dialogButton = JOptionPane.YES_NO_CANCEL_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Are you sure?", "Delete the airliner record", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION) {
                Flight d = (Flight) this.flightTable.getValueAt(selectRow, 0);
                this.currentAirliner.getFlightDirectory().deleteFlight(d);
                this.populateAF();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row!");
        }
    }//GEN-LAST:event_deleteFlightBtnActionPerformed

    private void airlinerBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_airlinerBoxActionPerformed
        // TODO add your handling code here:
        this.populateAF();
    }//GEN-LAST:event_airlinerBoxActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        // TODO add your handling code here:
        this.populateAF();
    }//GEN-LAST:event_refreshBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> airlinerBox;
    private javax.swing.JTable airplaneTable;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton createAirplaneBtn;
    private javax.swing.JButton createFlightBtn;
    private javax.swing.JButton deleteAirplaneBtn;
    private javax.swing.JButton deleteFlightBtn;
    private javax.swing.JTable flightTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton refreshBtn;
    // End of variables declaration//GEN-END:variables
}
